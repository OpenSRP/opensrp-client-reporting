buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:${androidToolsBuildGradle}"
    }
}

apply plugin: 'com.android.application'

android {

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    compileSdkVersion androidCompileSdkVersion
    buildToolsVersion androidBuildToolsVersion

    defaultConfig {
        applicationId "org.smartregister.reporting.sample"
        minSdkVersion androidMinSdkVersion
        targetSdkVersion androidTargetSdkVersion
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    dexOptions {
        preDexLibraries = false
        javaMaxHeapSize "4g"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "int", "DATABASE_VERSION", '3'
            buildConfigField "int", "INDICATOR_TALLY_GENERATOR_MINUTES", '2'

        }

        debug {
            buildConfigField "int", "DATABASE_VERSION", '3'
            buildConfigField "int", "INDICATOR_TALLY_GENERATOR_MINUTES", '2'
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LICENSE.md'
        exclude 'META-INF/NOTICE.md'
        exclude 'META-INF/LGPL2.1'
        exclude 'LICENSE.txt'
    }

    lintOptions {
        checkReleaseBuilds false
        disable 'MissingTranslation'
        checkReleaseBuilds false
        abortOnError false
    }

}

dependencies {
    implementation('org.smartregister:opensrp-client-core:1.15.4-SNAPSHOT@aar') {
        transitive = true
        exclude group: 'com.github.bmelnychuk', module: 'atv'
        exclude group: 'com.google.guava', module: 'guava'
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'design'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
        exclude group: 'com.github.johnkil.print', module: 'print'
        exclude group: 'org.apache.httpcomponents', module: 'httpmime'
        exclude group: 'com.ibm.fhir', module: 'fhir-model'
    }
    compileOnly 'com.ibm.fhir:fhir-model:4.2.3'

    implementation project(":opensrp-reporting")

    implementation 'org.jbundle.util.osgi.wrapped:org.jbundle.util.osgi.wrapped.org.apache.http.client:4.1.2'

    implementation 'androidx.media:media:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'

    implementation 'de.hdodenhof:circleimageview:2.2.0'

    testImplementation 'org.robolectric:robolectric:3.8'
    testImplementation 'org.robolectric:shadows-multidex:3.8'
    testImplementation 'org.robolectric:shadows-support-v4:3.4-rc2'
    // PowerMock
    def powerMockVersion = '1.7.1'
    testImplementation "org.powermock:powermock-module-junit4:$powerMockVersion"
    testImplementation "org.powermock:powermock-module-junit4-rule:$powerMockVersion"
    testImplementation "org.powermock:powermock-api-mockito2:$powerMockVersion"
    testImplementation "org.powermock:powermock-classloading-xstream:$powerMockVersion"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
}
